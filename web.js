// Generated by CoffeeScript 1.3.3
(function() {
  var Feed, app, express, getNearest, loremIpsum, moment, port, seedRandom, units, _;

  express = require('express');

  Feed = require('feed');

  moment = require('moment');

  _ = require('lodash');

  loremIpsum = require('lorem-ipsum');

  seedRandom = require('seed-random');

  app = express();

  app.use(express.logger());

  units = {
    second: {
      nextUp: 'minute',
      mustDivide: 60
    },
    minute: {
      nextUp: 'hour',
      mustDivide: 60
    },
    hour: {
      nextUp: 'day',
      mustDivide: 24
    },
    day: {
      nextUp: 'year',
      mustDivide: 1
    },
    month: {
      nextUp: 'year',
      mustDivide: 12
    },
    year: {
      mustDivide: 1
    }
  };

  getNearest = function(interval, unit) {
    var now, returnDate, unitOptions;
    if (interval === 1) {
      return moment().utc().startOf(unit);
    } else {
      unitOptions = units[unit];
      if (unitOptions.mustDivide % interval !== 0) {
        throw "When using " + unit + "s the interval must divide " + unitOptions.mustDivide;
      }
      now = moment().utc();
      returnDate = now.clone().startOf(unitOptions.nextUp || unit);
      returnDate[unit](now[unit]() - now[unit]() % interval);
      return returnDate;
    }
  };

  app.get('/feed', function(request, response) {
    var feed, i, interval, pubDate, unit, _i;
    if (request.query.interval != null) {
      interval = parseInt(request.query.interval);
    } else {
      interval = 1;
    }
    if (!interval) {
      response.send(500, "Interval must be an integer");
      return;
    }
    if (interval <= 0) {
      response.send(500, "Interval must be greater than 0");
      return;
    }
    unit = request.query.unit || 'minute';
    if (!units[unit]) {
      response.send(500, "Unit must be one of " + (_.keys(units).join(', ')));
      return;
    }
    feed = new Feed({
      title: "Lorem ipsum feed for an interval of " + interval + " " + unit + "s",
      description: 'This is a constantly updating lorem ipsum feed',
      link: 'http://example.com/',
      image: 'http://example.com/image.png',
      copyright: 'Public domain',
      author: {
        name: 'Michael Bertolacci',
        email: '',
        link: 'https://mgnbsoftware.com'
      }
    });
    pubDate = getNearest(interval, unit);
    for (i = _i = 0; _i < 10; i = ++_i) {
      feed.item({
        title: "Lorem ipsum " + (pubDate.format()),
        description: loremIpsum({
          random: function() {
            return seedRandom(pubDate.unix())();
          }
        }),
        link: "http://example.com/test/" + (pubDate.format('X')),
        date: pubDate.clone().toDate()
      });
      pubDate = pubDate.subtract(interval, unit);
    }
    response.set('Content-Type', 'application/rss+xml');
    return response.send(feed.render('rss-2.0'));
  });

  port = process.env.PORT || 5000;

  app.listen(port, function() {
    return console.log("Listening on " + port);
  });

}).call(this);
